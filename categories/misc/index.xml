<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>misc on wxgopher</title>
    <link>https://www.wxgopher.cc/categories/misc/</link>
    <description>Recent content in misc on wxgopher</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 15 Feb 2023 12:13:38 +0530</lastBuildDate><atom:link href="https://www.wxgopher.cc/categories/misc/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>建站小记</title>
      <link>https://www.wxgopher.cc/posts/20230215_%E5%BB%BA%E7%AB%99%E5%B0%8F%E8%AE%B0/</link>
      <pubDate>Wed, 15 Feb 2023 12:13:38 +0530</pubDate>
      
      <guid>https://www.wxgopher.cc/posts/20230215_%E5%BB%BA%E7%AB%99%E5%B0%8F%E8%AE%B0/</guid>
      <description>准备重开个人博客，希望跟世界建立更多的连接。网络上的帖子看了很多也折腾了许久，但是弱水三千只取一瓢，最后自己摸索出来的建站方案是各个帖子东拼西凑下来的。记录下来供有缘人参考。
建站和写作 创建一个私人的Github 仓库（例如叫Hugo_Site），我采用的是Hugo。直接按照官方的指南安装即可。我使用的主题是Diary。将主题下载下来，放到themes目录中。
对于图文博客，初期没有考虑图床。为了更方便管理，我参考的是Hugo如何在markdown里引用本地图片。我使用的是Typora写作，在Typora中将存储图片到相同目录这个选项打开即可。在写作的时候，在/Content/Posts目录下新建一个文件夹，在其内新建一个index.md，在这个md文件中写作。图片会存储在这个文件夹内，在生成站点的时候也会自动被Hugo拷贝到正确的目录，不用我们管。
写完文章以后在我们的仓库根目录下hugo server -d就可以预览网站，直接hugo生成网站。
最后我们的目录树如下：
├── .git //这是我们的私人仓库 ├── .github //这是我们使用github action的地方，用于部署 │ └── workflows ├── .gitignore //[1] ├── .gitmodules ├── assets ├── config.toml ├── content │ └── posts //文章贴这里 ├── data ├── public //[2] │ ├── .git ├── resources │ └── _gen ├── static //[3] └── themes └── diary 注释：
.gitignore参考https://github.com/github/gitignore/blob/main/community/Golang/Hugo.gitignore 这个目录就是我们的网站目录。首先需要在Github上新建一个公开仓库，命名为username.github.io。然后在这个public目录下新建一个本地git仓库，git remote add origin设置为username.github.io这个远程仓库。 在生成网站以后，将username.github.io这个仓库Push到Github，稍等片刻访问username.github.io就能看到我们的个人博客上线啦。
如果需要自定义域名，从域名提供商那里购买域名，然后设置解析到username.github.io即可。我的域名(www.wxgopher.cc)是在Cloudflare购买的。在Cloudflare的设置界面中设置CNAME代理www到wxgopher.github.io。同时在wxgopher.github.io的repo中找到Settings-&amp;gt;Pages-&amp;gt;Custom Domain，设置www.wxgopher.cc。
20230219更新：将网站同时部署到了cloudflare pages，提高国内的访问速度。域名设置重定向到cloudflare pages。如何设置只需要按照cloudflare手册操作即可。
部署和SEO 我们每次写完博客以后必须本地hugo生成一下，然后手动Push /Public中的内容到Github，这很繁琐。我们可以设置Github Action，在每次Push Hugo_Site的时候自动触发网站构建并推送到Github Pages。</description>
    </item>
    
    <item>
      <title>LaTeX与学术英文写作</title>
      <link>https://www.wxgopher.cc/posts/latex%E4%B8%8E%E5%AD%A6%E6%9C%AF%E8%8B%B1%E6%96%87%E5%86%99%E4%BD%9C/</link>
      <pubDate>Wed, 01 May 2019 12:13:38 +0530</pubDate>
      
      <guid>https://www.wxgopher.cc/posts/latex%E4%B8%8E%E5%AD%A6%E6%9C%AF%E8%8B%B1%E6%96%87%E5%86%99%E4%BD%9C/</guid>
      <description>本文为笔者作为业余的LaTeX使用者所作的心得分享，旨在帮助刚接触LaTeX的同事快速上手这一强大的排版工具。文末夹杂一些关于英文学术写作的小技巧供读者参考。更多关于TeX排版技术的研究可以参考文末的“推荐研读材料”。
LaTeX基础知识扫盲 Q：什么是LaTeX？它和TeX有什么区别？
A：高德纳在1978年实现了第一版的TeX引擎，用来进行书籍排版。LaTeX是针对TeX进行的封装和扩展。详细的历史可以参考文末参考文献中的“雷太赫排版系统简介 / 包太雷”第8页。本文会混用TeX/LaTeX。
Q：我可以从哪里快速上手TeX的基本概念、原理等?
A：最快的方式是参考“雷太赫排版系统简介 / 包太雷”。
Q：我应该在什么情况下使用TeX？
A：会议论文投稿一般会给出TeX模板；希望写有大量数学公式的文档；进行简单的幻灯片制作（参见后文对beamer的介绍）；希望使用源码托管系统托管文档；进行书籍排版等。
Q：什么是TeX发行版？我应该使用哪个发行版？
A：发行版是对集合TeX排版引擎、格式、宏包、驱动等连同一些实用程序 (utilities) ，遵照 TEX 的规范打包集成在一起，形成的一套软件系统（摘自“雷太赫排版系统简介”），发行版一般自带一个编辑器前端（比如TeX Works）。笔者推荐使用TeX Live，并使用地球上现存最强的TeX专用编辑器TeX Studio进行写作，MikTeX发行版不再推荐使用，因其实现标准与TeX标准略有偏差（此处引知乎用户李阿玲的回答），导致搜索故障排查信息不如TeX Live发行版方便。CTeX套装（MikTeX+WinEdt，注意这里不是指ctex宏包）不再推荐使用，因其自带的WinEdt编辑器是破解版，存在版权风险。
Q：别人家为什么可以PDF和TeX源码双向跳转？
A：这个特性叫SyncTeX，一般的TeX发行版是附带此功能的。SyncTeX生成的中间产物扩展名为.synctex.gz，删除这个文件并重新生成可以部分解决SyncTeX无法自动跳转的问题。
Q：TeX Live如何安装新的宏包？
A：通过tlmgr进行。安装TeX Live会自动安装tlmgr。或者是在CTAN查找手动下载安装。
Q：下载安装TeX系统/宏包为什么如此慢？
A：两个原因。其一是TeX宏包一般都非常小，又非常多，初次安装的时候会比较慢。再者TeX的主镜像源在国外。国内可以使用比较稳定的镜像源有清华大学的TUNA，参考这个页面。
安装和配置TeX写作环境 在线写作环境 现在市面上有一些基础功能免费的在线LaTeX写作网站，例如Overleaf。这类平台的优点是便捷，多平台同步，但是也存在如下缺点：
在线文档协作平台不符合公司的安全规范，有触犯公司高压线的风险； 故障调试不如本地环境便捷； （截止到2020年初）在线平台的代码高亮/自动补全等功能都不如TeX Studio等专业的TeX IDE。 离线写作环境 笔者推荐使用TeX Live发行版，并推荐使用TeX Studio（支持几乎市面上所有TeX前端的功能，并且是跨平台、开源、免费的）这款IDE作为协作工具。这两款软件都有Windows/Mac/Linux版本。
从TeX Live官方网站 下载安装程序安装，然后下载TeX Studio。需要注意的是TeX Studio的安装尽量在TeX Live以后，这样TeX Studio可以正确配置相关的执行命令。
如果不知道从哪里开始，从LaTeX Templates下载一份自己喜欢的模板，开始写作~
一些零碎的小技巧 开始写作之前建议先通读ltxprimer（文末参考文献），这本书只有100多页，可以扫清绝大多数使用TeX遇到的障碍； LaTeX可以用来制作幻灯片，使用Beamer类； 如果要批量OCR数学公式转换成TeX代码，可以使用Mathpix。这款软件是免费试用的； 类似于C++的#define，TeX有newcommmand/renewcommand； 非有必要，不要随意导入新的宏包：TeX由于历史遗留问题，宏包与宏包之间可能存在冲突； 爆栈网(stackoverflow)的TeX板块是最活跃的解决TeX问题的社区； 文献引用使用bibtex。查询引用文献可以用Google Scholar，搜索条目下面有bibtex格式。TeX Live默认配置了bibtex，只需要在文章中加入\bibliography{bibfile.bib}即可。详细的引用文献使用方法可以参考Overleaf的这个页面。 英文学术写作技巧 拿不准句子别扭不别扭，用Google搜一下； 不知道该使用的介词搭配，用英语语料库查一下（常用的英语语料库附在文末），一个使用的例子可以参考怎样利用COCA语料库提升英语用词水平？； 标点符号的使用可以参考Punctuation - English Grammar Today； 快速回顾英语语法和写作技巧参考文末附录。 推荐研读资料 LaTeX排版技术</description>
    </item>
    
    <item>
      <title>Notes on ltxprimer</title>
      <link>https://www.wxgopher.cc/posts/notes_theltxprimer/</link>
      <pubDate>Sun, 01 May 2016 12:13:38 +0530</pubDate>
      
      <guid>https://www.wxgopher.cc/posts/notes_theltxprimer/</guid>
      <description>Source: theltxprimer from Indian TeX group
The basics Period: latex assumes each period not following an upper case letter ends a sentence. In traditional typesetting, an extra little space is appended. Sometimes we don&amp;rsquo;t want this, so:
In order to produce Carrots are good for your eyes, since they contain Vitamin A. Have you ever seen a rabbit wearing glasses?, the correct input should be Carrots are good for your eyes, since they contain Vitamin A\@.</description>
    </item>
    
  </channel>
</rss>
